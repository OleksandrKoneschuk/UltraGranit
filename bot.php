<?php
ob_start();
stream_context_set_default([
    'ssl' => [
        'verify_peer' => false,
        'verify_peer_name' => false,
    ],
]);

require_once 'vendor/autoload.php';
require_once 'core/DataBase.php';

use core\Core;
use TelegramBot\Api\Client;
use TelegramBot\Api\BotApi;
use TelegramBot\Api\Exception;
use core\DataBase;
use TelegramBot\Api\Types\ForceReply;
use MVC\models\Order;

define('TOKEN', '7872489450:AAFY_H1TopVR9op3w3iHQc5ql34PwUL9p6s');

$db = new DataBase('localhost', 'ultra_granit', 'admin', 'a69nlAhtUlyyyIS2');

$bot = new Client(TOKEN);
$api = new BotApi(TOKEN);

// –í–∏–º–∫–Ω–µ–Ω–Ω—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ SSL –¥–ª—è `curl`
$api->setCurlOption(CURLOPT_SSL_VERIFYPEER, false);
$api->setCurlOption(CURLOPT_SSL_VERIFYHOST, false);

/**
 * –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —á–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –æ—á—ñ–∫—É—î –≤–≤–µ–¥–µ–Ω–Ω—è –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω—É
 */
function isUserWaitingForPhone($chatId) {
    return strpos(file_get_contents("waiting_users.txt"), (string)$chatId) !== false;
}

/**
 * –î–æ–¥–∞—î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —É —Å–ø–∏—Å–æ–∫ –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω—É
 */
function setUserWaitingForPhone($chatId) {
    file_put_contents("waiting_users.txt", "$chatId\n", FILE_APPEND);
}

/**
 * –í–∏–¥–∞–ª—è—î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑—ñ —Å–ø–∏—Å–∫—É –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω—É
 */
function removeUserFromWaitingList($chatId) {
    if (!file_exists("waiting_users.txt")) return;

    $lines = file("waiting_users.txt", FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);
    $newLines = [];

    foreach ($lines as $line) {
        list($id, $action) = explode(":", $line);
        if ($id != $chatId) $newLines[] = $line;
    }

    file_put_contents("waiting_users.txt", implode("\n", $newLines) . "\n");
}

/**
 * –û—Ç—Ä–∏–º—É—î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ –ë–î –∑–∞ telegram_id
 */
function getUserByTelegramId($telegramId) {
    global $db;
    $result = $db->select('users', '*', ['telegram_id' => $telegramId]);
    return $result ? $result[0] : null;
}

/**
 * –û—Ç—Ä–∏–º—É—î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ –ë–î –∑–∞ –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω—É
 */
function getUserByPhoneNumber($phoneNumber) {
    global $db;

    // –í–∏–¥–∞–ª—è—î–º–æ +38, —è–∫—â–æ —î
    if (strpos($phoneNumber, '+38') === 0) {
        $phoneNumber = substr($phoneNumber, 3);
    }

    file_put_contents('log.txt', "üîç –®—É–∫–∞—î–º–æ —Ç–µ–ª–µ—Ñ–æ–Ω —É –ë–î: $phoneNumber\n", FILE_APPEND);
    $result = $db->select('users', '*', ['phone_number' => $phoneNumber]);
    return $result ? $result[0] : null;
}

/**
 * –ü—Ä–∏–≤‚Äô—è–∑—É—î Telegram ID –¥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
 */
function linkTelegramToUser($chatId, $userId) {
    global $db;
    file_put_contents('log.txt', "üîπ –û–Ω–æ–≤–ª–µ–Ω–Ω—è Telegram ID –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞: ID=$userId, Telegram ID=$chatId\n", FILE_APPEND);
    $result = $db->update("users", ["telegram_id" => $chatId], ["id" => $userId]);

    if ($result) {
        file_put_contents('log.txt', "‚úÖ Telegram ID —É—Å–ø—ñ—à–Ω–æ –æ–Ω–æ–≤–ª–µ–Ω–æ!\n", FILE_APPEND);
    } else {
        file_put_contents('log.txt', "‚ùå –ü–û–ú–ò–õ–ö–ê: –ù–µ –≤–¥–∞–ª–æ—Å—è –æ–Ω–æ–≤–∏—Ç–∏ Telegram ID\n", FILE_APPEND);
    }
}

function setUserWaitingForAction($chatId, $action) {
    file_put_contents("waiting_users.txt", "$chatId:$action\n", FILE_APPEND);
}

function getUserWaitingAction($chatId) {
    if (!file_exists("waiting_users.txt")) return null;

    $lines = file("waiting_users.txt", FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);
    foreach ($lines as $line) {
        list($id, $action) = explode(":", $line);
        if ($id == $chatId) return $action;
    }
    return null;
}

/**
 * –í—ñ–¥–ø—Ä–∞–≤–∫–∞ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é
 */
//function sendMainMenu($chatId, $accessLevel, $api) {
//    $menuText = "üìã *–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é*:";
//
//    // –°—Ç–≤–æ—Ä—é—î–º–æ –º–∞—Å–∏–≤ –∫–Ω–æ–ø–æ–∫ –¥–ª—è –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∏
//    $buttons = [
//        ["/products", "/orders"],
//        ["/get_currency"]
//    ];
//
//    if ($accessLevel >= 5) {
//        $buttons[] = ["/orders"];
//    }
//    if ($accessLevel == 10) {
//        $buttons[] = ["/admin", "/set_currency"];
//    }
//
//    // –°—Ç–≤–æ—Ä—é—î–º–æ —Ä–æ–∑–º—ñ—Ç–∫—É –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∏
//    $keyboard = new \TelegramBot\Api\Types\ReplyKeyboardMarkup($buttons, true, true);
//
//    // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –º–µ–Ω—é –∑ –∫–Ω–æ–ø–∫–∞–º–∏
//    $api->sendMessage($chatId, $menuText, "Markdown", false, null, $keyboard);
//}

function sendMainMenu($chatId, $accessLevel, $api) {
    $menu = "üìã *–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é:*\n\n";
    $menu .= "üõç */products* - –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ —Ç–æ–≤–∞—Ä–∏\n";
    $menu .= "üì¶ */orders* - –ú–æ—ó –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è\n";
    $menu .= "üíµ */get_currency* - –ü–µ—Ä–µ–≥–ª—è–¥ –∫—É—Ä—Å—É USD\n";

    if ($accessLevel >= 5) {
        $menu .= "\nüë• *–ú–µ–Ω–µ–¥–∂–µ—Ä—Å—å–∫—ñ –∫–æ–º–∞–Ω–¥–∏:*\n";
        $menu .= "üì¶ */orders_list* - –°–ø–∏—Å–æ–∫ —É—Å—ñ—Ö –∑–∞–º–æ–≤–ª–µ–Ω—å\n";
    }
    if ($accessLevel == 10) {
        $menu .= "\nüõ† *–ê–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ñ –∫–æ–º–∞–Ω–¥–∏:*\n";
        $menu .= "üîß */admin* - –ü–∞–Ω–µ–ª—å –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞\n";
        $menu .= "üíµ */set_currency* - –ù–∞–ª–∞—à—Ç—É–≤–∞—Ç–∏ –∫—É—Ä—Å USD\n";
        $menu .= "üíµ */enable_auto_update* - –£–≤—ñ–º–∫–Ω—É—Ç–∏ –∞–≤—Ç–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∫—É—Ä—Å—É USD\n";
        $menu .= "üíµ */disable_auto_update* - –í–∏–º–∫–Ω—É—Ç–∏ –∞–≤—Ç–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∫—É—Ä—Å—É USD\n";
        $menu .= "üíµ */status_auto_update* - –°—Ç–∞—Ç—É—Å –∞–≤—Ç–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∫—É—Ä—Å—É USD\n";
    }

    // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –≤—ñ–¥—Ñ–æ—Ä–º–∞—Ç–æ–≤–∞–Ω–µ –º–µ–Ω—é —É Markdown
    $api->sendMessage($chatId, $menu, "Markdown");
}

// üìå –§—É–Ω–∫—Ü—ñ—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ä–æ–ª—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
function processRoleUpdate($chatId, $targetUserId, $newAccessLevel, $roleName, $api, $db) {
    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –≤–≤–µ–¥–µ–Ω–∏–π ID —î —á–∏—Å–ª–æ–º
    if (!is_numeric($targetUserId) || intval($targetUserId) <= 0) {
        $api->sendMessage($chatId, "‚ùå –ù–µ–∫–æ—Ä–µ–∫—Ç–Ω–∏–π ID! –í–≤–µ–¥—ñ—Ç—å —Ü—ñ–ª–µ —á–∏—Å–ª–æ.", "Markdown");
        return;
    }

    $targetUserId = intval($targetUserId);

    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —ñ—Å–Ω—É—î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á
    $targetUser = $db->select('users', ['id'], ['id' => $targetUserId])[0] ?? null;

    if (!$targetUser) {
        file_put_contents('log.txt', "‚ùå –ü–û–ú–ò–õ–ö–ê: –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –∑ ID #$targetUserId –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∏–π!\n", FILE_APPEND);
        $api->sendMessage($chatId, "‚ùå –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –∑ ID #$targetUserId –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∏–π.");
        return;
    }

    // –û–Ω–æ–≤–ª—é—î–º–æ —Ä—ñ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    $db->update('users', ['access_level' => $newAccessLevel], ['id' => $targetUserId]);

    file_put_contents('log.txt', "‚úÖ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á #$targetUserId –æ—Ç—Ä–∏–º–∞–≤ —Ä–æ–ª—å $roleName\n", FILE_APPEND);
    $api->sendMessage($chatId, "‚úÖ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á #$targetUserId —Ç–µ–ø–µ—Ä $roleName!");
}

/**
 * –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Ä—ñ–≤–Ω—è –¥–æ—Å—Ç—É–ø—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
 */
function getUserAccessLevel($userId)
{
    global $db;
    $user = $db->select('users', ['access_level'], ['id' => $userId]);
    return !empty($user) ? $user[0]->access_level : 1; // 1 - —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á
}

/**
 * –û—Ç—Ä–∏–º–∞—Ç–∏ —Å—Ç–∞—Ç—É—Å –∞–≤—Ç–æ–æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∫—É—Ä—Å—É
 */
function getAutoUpdateStatus()
{
    return file_exists('auto_update_status.txt') ? trim(file_get_contents('auto_update_status.txt')) : 'disabled';
}

/**
 * –í—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ —Å—Ç–∞—Ç—É—Å –∞–≤—Ç–æ–æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∫—É—Ä—Å—É
 */
function setAutoUpdateStatus($status)
{
    file_put_contents('auto_update_status.txt', $status);
}

/**
 * –û—Ç—Ä–∏–º—É—î —Å–ø–∏—Å–æ–∫ –º–µ–Ω–µ–¥–∂–µ—Ä—ñ–≤ —Ç–∞ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—ñ–≤, —è–∫—ñ –º–∞—é—Ç—å access_level >= 5
 */
function getManagersAndAdmins() {
    global $db;
    return $db->select('users', ['telegram_id'], ['access_level[>=]' => 5]);
}

function writeLog($message) {
    $logFile = __DIR__ . '/../../log.txt'; // –®–ª—è—Ö –¥–æ —Ñ–∞–π–ª—É –ª–æ–≥—ñ–≤
    $date = date("Y-m-d H:i:s"); // –î–∞—Ç–∞ —ñ —á–∞—Å
    file_put_contents($logFile, "[$date] $message" . PHP_EOL, FILE_APPEND);
}


$data = file_get_contents("php://input");
file_put_contents('log.txt', date("Y-m-d H:i:s") . " - –û—Ç—Ä–∏–º–∞–Ω—ñ –¥–∞–Ω—ñ: " . $data . PHP_EOL, FILE_APPEND);

if (!$data) {
    file_put_contents('log.txt', "‚ùå –ü–û–ú–ò–õ–ö–ê: –î–∞–Ω—ñ –≤—ñ–¥ Telegram –Ω–µ –æ—Ç—Ä–∏–º–∞–Ω—ñ!" . PHP_EOL, FILE_APPEND);
    exit;
}

try {
    $bot->command('start', function ($message) use ($api) {
        $chatId = $message->getChat()->getId();
        $firstName = $message->getChat()->getFirstName();
        $username = $message->getChat()->getUsername() ?? '–Ω–µ–º–∞—î';

        file_put_contents('log.txt', "‚ÑπÔ∏è /start: –û—Ç—Ä–∏–º–∞–Ω–æ –∑–∞–ø–∏—Ç –≤—ñ–¥ $chatId ($firstName @$username)\n", FILE_APPEND);

        global $db;
        $user = getUserByTelegramId($chatId);

        if ($user) {
            file_put_contents('log.txt', "‚úÖ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –∑–Ω–∞–π–¥–µ–Ω–∏–π: {$user->first_name} {$user->last_name} (ID: {$user->id})\n", FILE_APPEND);
            $api->sendMessage($chatId, "‚úÖ –í—ñ—Ç–∞—é, {$user->first_name}! –í–∏ –≤–∂–µ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω—ñ.\n –í–∏–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ –∫–æ–¥–∞–Ω–¥—É /menu —Ç–∞ –ø–µ—Ä–µ–≥–ª—è–Ω—å—Ç–µ –º–æ–∂–ª–∏–≤–æ—Å—Ç—ñ!");
        } else {
            file_put_contents('log.txt', "‚ùå –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –ù–ï –∑–Ω–∞–π–¥–µ–Ω–∏–π —É –ë–î. –ó–∞–ø–∏—Ç—É—î–º–æ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É.\n", FILE_APPEND);
            setUserWaitingForPhone($chatId);
            $replyMarkup = new ForceReply(true);
            $api->sendMessage($chatId, "üì≤ –í–≤–µ–¥—ñ—Ç—å —Å–≤—ñ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É —É —Ñ–æ—Ä–º–∞—Ç—ñ *0123456789* (–±–µ–∑ +38):", "Markdown", false, null, $replyMarkup);
        }
    });

    $bot->on(function ($update) use ($api, $db) {
        $message = $update->getMessage();
        $chatId = $message->getChat()->getId();
        $text = trim($message->getText());
        $replyTo = $message->getReplyToMessage();

        // üìå –Ø–∫—â–æ —Ü–µ –∫–æ–º–∞–Ω–¥–∞ (–ø–æ—á–∏–Ω–∞—î—Ç—å—Å—è –∑ "/"), –ø—Ä–æ—Å—Ç–æ –ª–æ–≥—É—î–º–æ —Ç–∞ –≤–∏—Ö–æ–¥–∏–º–æ
        if (strpos($text, '/') === 0) {
            file_put_contents('log.txt', "üîç –ö–æ–º–∞–Ω–¥–∞ –æ—Ç—Ä–∏–º–∞–Ω–∞: $text (–Ω–µ –Ω–æ–º–µ—Ä)\n", FILE_APPEND);
            return;
        }

        // üìå –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –ø–µ—Ä–µ–±—É–≤–∞—î —É —Å—Ç–∞–Ω—ñ –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è –≤–≤–µ–¥–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö
        $waitingAction = getUserWaitingAction($chatId);

        if ($waitingAction) {
            removeUserFromWaitingList($chatId); // –í–∏–¥–∞–ª—è—î–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑—ñ —Å–ø–∏—Å–∫—É –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è

            switch ($waitingAction) {
                case "assign_manager":
                    processRoleUpdate($chatId, $text, 5, "–º–µ–Ω–µ–¥–∂–µ—Ä", $api, $db);
                    return;
                case "assign_admin":
                    processRoleUpdate($chatId, $text, 10, "–∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä", $api, $db);
                    return;
                case "assign_user":
                    processRoleUpdate($chatId, $text, 1, "–∑–≤–∏—á–∞–π–Ω–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á", $api, $db);
                    return;
                case "set_currency":
                    if (!is_numeric($text) || floatval($text) <= 0) {
                        $api->sendMessage($chatId, "‚ùå –ù–µ–∫–æ—Ä–µ–∫—Ç–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è! –í–≤–µ–¥—ñ—Ç—å —á–∏—Å–ª–æ (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥ `39.50`).", "Markdown");
                        return;
                    }

                    $newRate = floatval($text);
                    $db->update('currency', ['exchange_rate' => $newRate, 'updated_at' => date('Y-m-d H:i:s')], ['currency_code' => 'USD']);

                    file_put_contents('log.txt', "üîÑ –ö—É—Ä—Å USD –æ–Ω–æ–≤–ª–µ–Ω–æ –¥–æ $newRate UAH (–ú–µ–Ω–µ–¥–∂–µ—Ä/–ê–¥–º—ñ–Ω ID: $chatId)\n", FILE_APPEND);
                    $api->sendMessage($chatId, "‚úÖ –ö—É—Ä—Å USD –æ–Ω–æ–≤–ª–µ–Ω–æ –¥–æ *$newRate* –≥—Ä–Ω.", "Markdown");
                    return;
            }
        }

        // üìå –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –æ—á—ñ–∫—É—î –≤–≤–µ–¥–µ–Ω–Ω—è –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω—É
        if (isUserWaitingForPhone($chatId)) {
            $user = getUserByPhoneNumber($text);
            if ($user) {
                linkTelegramToUser($chatId, $user->id);
                removeUserFromWaitingList($chatId);
                $api->sendMessage($chatId, "‚úÖ –í–∏ —É—Å–ø—ñ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ñ! –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ /menu –¥–ª—è –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó.");
            } else {
                $api->sendMessage($chatId, "‚ùå –í–∞—à –Ω–æ–º–µ—Ä –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ —É –±–∞–∑—ñ –¥–∞–Ω–∏—Ö.");
            }
            return;
        }

        // üìå –Ø–∫—â–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î –∂–æ–¥–Ω–æ–º—É –æ—á—ñ–∫—É–≤–∞–Ω–Ω—é
        $api->sendMessage($chatId, "–í–∏ –Ω–∞–ø–∏—Å–∞–ª–∏: $text");

    }, function () {
        return true;
    });

    $bot->command('menu', function ($message) use ($api) {
        $chatId = $message->getChat()->getId();
        $user = getUserByTelegramId($chatId);
        $accessLevel = $user ? $user->access_level : 1;
        sendMainMenu($chatId, $accessLevel, $api);
    });

    $bot->command('products', function ($message) use ($api, $db) {
        $chatId = $message->getChat()->getId();
        $products = $db->select('product', ['name', 'price'], null, ['LIMIT' => 5]);

        $response = "üõç *–¢–æ–≤–∞—Ä–∏:*\n";
        foreach ($products as $product) {
            $response .= "üìå " . $product->name . " - " . $product->price . "\n";
        }

        $api->sendMessage($chatId, $response, "Markdown");
    });

    // üìå –ö–æ–º–∞–Ω–¥–∞ /orders (–º–µ–Ω–µ–¥–∂–µ—Ä–∏ —Ç–∞ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∏ –º–æ–∂—É—Ç—å –±–∞—á–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è)
    $bot->command('orders', function ($message) use ($api, $db) {
        $chatId = $message->getChat()->getId();
        $user = getUserByTelegramId($chatId);
        $userId = $user ? $user->id : null;
        $accessLevel = $userId ? getUserAccessLevel($userId) : 1; // 1 - —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏–π –¥–æ—Å—Ç—É–ø

        if ($accessLevel == 1) {
            // –û—Ç—Ä–∏–º—É—î–º–æ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ –±–∞–∑–∏
            if (!$user) {
                $api->sendMessage($chatId, "‚ùå –ü–æ–º–∏–ª–∫–∞: –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ —É –±–∞–∑—ñ.");
                return;
            }

            // –û—Ç—Ä–∏–º—É—î–º–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            $orders = $db->select('orders', ['id', 'status'], ['user_id' => $userId], ['ORDER' => ['id' => 'DESC'], 'LIMIT' => 5]);

            if (empty($orders)) {
                $api->sendMessage($chatId, "‚ÑπÔ∏è –£ –≤–∞—Å –Ω–µ–º–∞—î –∑–∞–º–æ–≤–ª–µ–Ω—å.");
                return;
            }

            // –§–æ—Ä–º—É—î–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å
            $response = "üì¶ *–í–∞—à—ñ –æ—Å—Ç–∞–Ω–Ω—ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è:*\n";
            foreach ($orders as $order) {
                $response .= "\nüÜî –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è: *#" . $order->id . "*\n";
                $response .= "üìå –°—Ç–∞—Ç—É—Å: *" . $order->status . "*\n";

                // –û—Ç—Ä–∏–º—É—î–º–æ —Ç–æ–≤–∞—Ä–∏ –≤ —Ü—å–æ–º—É –∑–∞–º–æ–≤–ª–µ–Ω–Ω—ñ
                $orderProducts = $db->select('order_products', ['product_id', 'price'], ['order_id' => $order->id]);

                if (!empty($orderProducts)) {
                    $response .= "üõí *–¢–æ–≤–∞—Ä–∏:*\n";
                    foreach ($orderProducts as $orderProduct) {
                        // –û—Ç—Ä–∏–º—É—î–º–æ –Ω–∞–∑–≤—É —Ç–æ–≤–∞—Ä—É
                        $product = $db->select('product', ['name'], ['id' => $orderProduct->product_id])[0] ?? null;
                        $productName = $product ? $product->name : "‚ùì –ù–µ–≤—ñ–¥–æ–º–∏–π —Ç–æ–≤–∞—Ä";

                        $response .= "   üîπ $productName - *" . number_format($orderProduct->price, 2) . " –≥—Ä–Ω*\n";
                    }
                } else {
                    $response .= "üõí –¢–æ–≤–∞—Ä–∏ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω—ñ ‚ùå\n";
                }
            }

            $api->sendMessage($chatId, $response, "Markdown");
            return;
        }

        if ($accessLevel < 5) {
            $api->sendMessage($chatId, "‚õî –£ –≤–∞—Å –Ω–µ–º–∞—î –ø—Ä–∞–≤ –¥–ª—è –ø–µ—Ä–µ–≥–ª—è–¥—É –∑–∞–º–æ–≤–ª–µ–Ω—å!");
            return;
        }

        $orders = $db->select('orders', ['id', 'user_id', 'status'], null, ['ORDER' => ['id' => 'DESC'], 'LIMIT' => 5]);

        $response = "üì¶ *–û—Å—Ç–∞–Ω–Ω—ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è:*\n";
        foreach ($orders as $order) {
            $response .= "üÜî –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è: #" . $order->id . " (–°—Ç–∞—Ç—É—Å: " . $order->status . ")\n";
        }

        $api->sendMessage($chatId, $response, "Markdown");
    });

    // üìå –ö–æ–º–∞–Ω–¥–∞ /admin (–¥–æ—Å—Ç—É–ø —Ç—ñ–ª—å–∫–∏ –¥–ª—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—ñ–≤)
    $bot->command('admin', function ($message) use ($api) {
        $chatId = $message->getChat()->getId();
        $user = getUserByTelegramId($chatId);
        $userId = $user ? $user->id : null;
        $accessLevel = $userId ? getUserAccessLevel($userId) : 1; // 1 - —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏–π –¥–æ—Å—Ç—É–ø

        if ($accessLevel < 10) {
            $api->sendMessage($chatId, "‚õî –£ –≤–∞—Å –Ω–µ–º–∞—î –ø—Ä–∞–≤ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞!");
            return;
        }

        $api->sendMessage($chatId, "üîß –ü–∞–Ω–µ–ª—å –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞:\n".
            "üë§ /assign_manager - –ó—Ä–æ–±–∏—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º\n".
            "üë§ /assign_admin - –ó—Ä–æ–±–∏—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º\n".
            "üë§ /assign_user - –ü–æ–≤–µ—Ä–Ω—É—Ç–∏ —Ä–æ–ª—å –∑–≤–∏—á–∞–π–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞\n".
            "üíµ /set_currency - –ù–∞–ª–∞—à—Ç—É–≤–∞—Ç–∏ –∫—É—Ä—Å USD");
    });

    // üìå –ö–æ–º–∞–Ω–¥–∞ /assign_manager (–∞–¥–º—ñ–Ω –º–æ–∂–µ –ø—Ä–∏–∑–Ω–∞—á–∞—Ç–∏ –º–µ–Ω–µ–¥–∂–µ—Ä—ñ–≤)
    $bot->command('assign_manager', function ($message) use ($api) {
        $chatId = $message->getChat()->getId();
        $user = getUserByTelegramId($chatId);
        $userId = $user ? $user->id : null;
        $accessLevel = $userId ? getUserAccessLevel($userId) : 1;

        if ($accessLevel < 10) {
            $api->sendMessage($chatId, "‚õî –£ –≤–∞—Å –Ω–µ–º–∞—î –ø—Ä–∞–≤!");
            return;
        }

        setUserWaitingForAction($chatId, "assign_manager");
        $api->sendMessage($chatId, "üë§ –í–≤–µ–¥—ñ—Ç—å *ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞*, —è–∫–æ–º—É –ø—Ä–∏–∑–Ω–∞—á–∏—Ç–∏ —Ä–æ–ª—å –º–µ–Ω–µ–¥–∂–µ—Ä–∞:", "Markdown", false, null, new \TelegramBot\Api\Types\ForceReply(true));
    });

    // üìå –ö–æ–º–∞–Ω–¥–∞ /assign_admin (–∞–¥–º—ñ–Ω –º–æ–∂–µ –ø—Ä–∏–∑–Ω–∞—á–∞—Ç–∏ —ñ–Ω—à–∏—Ö –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—ñ–≤)
    $bot->command('assign_admin', function ($message) use ($api) {
        $chatId = $message->getChat()->getId();
        $user = getUserByTelegramId($chatId);
        $userId = $user ? $user->id : null;
        $accessLevel = $userId ? getUserAccessLevel($userId) : 1;

        if ($accessLevel < 10) {
            $api->sendMessage($chatId, "‚õî –£ –≤–∞—Å –Ω–µ–º–∞—î –ø—Ä–∞–≤!");
            return;
        }

        setUserWaitingForAction($chatId, "assign_admin");
        $api->sendMessage($chatId, "üë§ –í–≤–µ–¥—ñ—Ç—å *ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞*, —è–∫–æ–º—É –ø—Ä–∏–∑–Ω–∞—á–∏—Ç–∏ —Ä–æ–ª—å –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞:", "Markdown", false, null, new \TelegramBot\Api\Types\ForceReply(true));
    });

    // üìå –ö–æ–º–∞–Ω–¥–∞ /assign_user (–∞–¥–º—ñ–Ω –º–æ–∂–µ –ø–æ–≤–µ—Ä–Ω—É—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–≤—ñ —Ä–æ–ª—å –∑–≤–∏—á–∞–π–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞)
    $bot->command('assign_user', function ($message) use ($api) {
        $chatId = $message->getChat()->getId();
        $user = getUserByTelegramId($chatId);
        $userId = $user ? $user->id : null;
        $accessLevel = $userId ? getUserAccessLevel($userId) : 1;

        if ($accessLevel < 10) {
            $api->sendMessage($chatId, "‚õî –£ –≤–∞—Å –Ω–µ–º–∞—î –ø—Ä–∞–≤!");
            return;
        }

        setUserWaitingForAction($chatId, "assign_user");
        $api->sendMessage($chatId, "üë§ –í–≤–µ–¥—ñ—Ç—å *ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞*, —â–æ–± –ø–æ–≤–µ—Ä–Ω—É—Ç–∏ –π–æ–º—É —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏–π —Ä—ñ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø—É:", "Markdown", false, null, new \TelegramBot\Api\Types\ForceReply(true));
    });

    // üìå –ö–æ–º–∞–Ω–¥–∞ /set_currency (–º–µ–Ω–µ–¥–∂–µ—Ä–∏ —Ç–∞ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∏ –º–æ–∂—É—Ç—å –∑–º—ñ–Ω—é–≤–∞—Ç–∏ –∫—É—Ä—Å –¥–æ–ª–∞—Ä–∞)
    $bot->command('set_currency', function ($message) use ($api) {
        $chatId = $message->getChat()->getId();
        $user = getUserByTelegramId($chatId);
        $userId = $user ? $user->id : null;
        $accessLevel = $userId ? getUserAccessLevel($userId) : 1;

        if ($accessLevel < 5) {
            $api->sendMessage($chatId, "‚õî –£ –≤–∞—Å –Ω–µ–º–∞—î –ø—Ä–∞–≤ –∑–º—ñ–Ω—é–≤–∞—Ç–∏ –∫—É—Ä—Å –≤–∞–ª—é—Ç!");
            return;
        }

        setUserWaitingForAction($chatId, "set_currency");
        $api->sendMessage($chatId, "üíµ –í–≤–µ–¥—ñ—Ç—å –Ω–æ–≤–∏–π –∫—É—Ä—Å USD ‚Üí UAH (–ª–∏—à–µ —á–∏—Å–ª–æ, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥ `39.50`):", "Markdown", false, null, new \TelegramBot\Api\Types\ForceReply(true));
    });

    // üìå –ö–æ–º–∞–Ω–¥–∞ /get_currency (–±—É–¥—å-—Ö—Ç–æ –º–æ–∂–µ –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –∫—É—Ä—Å)
    $bot->command('get_currency', function ($message) use ($api, $db) {
        $chatId = $message->getChat()->getId();

        // –û—Ç—Ä–∏–º—É—î–º–æ –∫—É—Ä—Å –¥–æ–ª–∞—Ä–∞ –∑ –ë–î
        $currency = $db->select('currency', ['exchange_rate', 'updated_at'], ['currency_code' => 'USD'])[0] ?? null;

        if ($currency) {
            $api->sendMessage($chatId, "üíµ –ü–æ—Ç–æ—á–Ω–∏–π –∫—É—Ä—Å USD: *{$currency->exchange_rate}* –≥—Ä–Ω\nüìÖ –û–Ω–æ–≤–ª–µ–Ω–æ: {$currency->updated_at}", "Markdown");
        } else {
            $api->sendMessage($chatId, "‚ùå –ö—É—Ä—Å USD –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –≤ –±–∞–∑—ñ –¥–∞–Ω–∏—Ö.", "Markdown");
        }
    });

    // üìå –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —É–≤—ñ–º–∫–Ω–µ–Ω–Ω—è –∞–≤—Ç–æ–æ–Ω–æ–≤–ª–µ–Ω–Ω—è
    $bot->command('enable_auto_update', function ($message) use ($api) {
        $chatId = $message->getChat()->getId();
        $user = getUserByTelegramId($chatId);
        $userId = $user ? $user->id : null;
        $accessLevel = $userId ? getUserAccessLevel($userId) : 1;

        if ($accessLevel < 10) {
            $api->sendMessage($chatId, "‚õî –£ –≤–∞—Å –Ω–µ–º–∞—î –ø—Ä–∞–≤ –¥–ª—è —Ü—ñ—î—ó –¥—ñ—ó!");
            return;
        }

        setAutoUpdateStatus('enabled');
        $api->sendMessage($chatId, "‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∫—É—Ä—Å—É —É–≤—ñ–º–∫–Ω–µ–Ω–æ.");
    });

    // üìå –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –≤–∏–º–∫–Ω–µ–Ω–Ω—è –∞–≤—Ç–æ–æ–Ω–æ–≤–ª–µ–Ω–Ω—è
    $bot->command('disable_auto_update', function ($message) use ($api) {
        $chatId = $message->getChat()->getId();
        $user = getUserByTelegramId($chatId);
        $userId = $user ? $user->id : null;
        $accessLevel = $userId ? getUserAccessLevel($userId) : 1;

        if ($accessLevel < 10) {
            $api->sendMessage($chatId, "‚õî –£ –≤–∞—Å –Ω–µ–º–∞—î –ø—Ä–∞–≤ –¥–ª—è —Ü—ñ—î—ó –¥—ñ—ó!");
            return;
        }

        setAutoUpdateStatus('disabled');
        $api->sendMessage($chatId, "‚ùå –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∫—É—Ä—Å—É –≤–∏–º–∫–Ω–µ–Ω–æ.");
    });

    // üìå –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å—É –∞–≤—Ç–æ–æ–Ω–æ–≤–ª–µ–Ω–Ω—è
    $bot->command('status_auto_update', function ($message) use ($api) {
        $chatId = $message->getChat()->getId();
        $user = getUserByTelegramId($chatId);
        $userId = $user ? $user->id : null;
        $accessLevel = $userId ? getUserAccessLevel($userId) : 1;

        if ($accessLevel < 10) {
            $api->sendMessage($chatId, "‚õî –£ –≤–∞—Å –Ω–µ–º–∞—î –ø—Ä–∞–≤ –¥–ª—è —Ü—ñ—î—ó –¥—ñ—ó!");
            return;
        }

        $status = getAutoUpdateStatus();
        $api->sendMessage($chatId, "‚ÑπÔ∏è –°—Ç–∞—Ç—É—Å –∞–≤—Ç–æ–æ–Ω–æ–≤–ª–µ–Ω–Ω—è: " . ($status == 'enabled' ? "‚úÖ –£–≤—ñ–º–∫–Ω–µ–Ω–æ" : "‚ùå –í–∏–º–∫–Ω–µ–Ω–æ"));
    });

    $bot->command('update_order', function ($message) use ($api, $db) {
        $chatId = $message->getChat()->getId();
        $user = getUserByTelegramId($chatId);
        $userId = $user ? $user->id : null;
        $accessLevel = $userId ? getUserAccessLevel($userId) : 1;

        if ($accessLevel < 5) {
            $api->sendMessage($chatId, "‚õî –£ –≤–∞—Å –Ω–µ–º–∞—î –ø—Ä–∞–≤ –∑–º—ñ–Ω—é–≤–∞—Ç–∏ —Å—Ç–∞—Ç—É—Å –∑–∞–º–æ–≤–ª–µ–Ω—å!");
            return;
        }

        $params = explode(" ", trim($message->getText()));

        if (count($params) < 3) {
            $api->sendMessage($chatId, "‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç! –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ: `/update_order {order_id} new|processing|completed|cancelled`", "Markdown");
            return;
        }

        $orderId = intval($params[1]);
        $newStatus = $params[2];

        $validStatuses = ['new', 'processing', 'completed', 'cancelled'];
        if (!in_array($newStatus, $validStatuses)) {
            $api->sendMessage($chatId, "‚ùå –ù–µ–≤—ñ—Ä–Ω–∏–π —Å—Ç–∞—Ç—É—Å! –î–æ—Å—Ç—É–ø–Ω—ñ —Å—Ç–∞—Ç—É—Å–∏: " . implode(", ", $validStatuses));
            return;
        }

        $updated = $db->update('orders', ['status' => $newStatus], ['id' => $orderId]);

        if ($updated) {
            $api->sendMessage($chatId, "‚úÖ –°—Ç–∞—Ç—É—Å –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è #$orderId –æ–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ *$newStatus*.", "Markdown");
        } else {
            $api->sendMessage($chatId, "‚ùå –ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞—Ç—É—Å—É –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è #$orderId.");
        }
    });

    $bot->run();
} catch (Exception $e) {
    file_put_contents('log.txt', "‚ùå –ü–û–ú–ò–õ–ö–ê: " . $e->getMessage() . PHP_EOL, FILE_APPEND);
}
